{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifgridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifgridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAERC,mBAAS,IAFD,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAiB9C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAG,OAAMP,GAAN,mBAAoBO,OACtCN,EAAc,OAMf,2BACKO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,Y,uBCRnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAAKG,OAAOC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAKA,EAAL,OCHCO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECDf,SAAEA,GAAe,IAAD,EAEZd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAJ2B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAkBxC,OAXAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAAEpB,IAEEqB,EDf2BK,CAAc1B,GAAlCa,EAFyB,EAE/BN,KAAca,EAFiB,EAEjBA,QAEtB,OACI,oCACI,4BAAMpB,GAEJoB,GAAW,yCAEb,yBAAKJ,UAAU,aACTH,EAAOJ,KAAK,SAAEC,GAAF,OACV,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACTD,UEWVkB,EAzBM,WAAO,IAAD,EAEe1C,mBAAS,CAAE,wBAF1B,mBAEf2C,EAFe,KAEH5C,EAFG,KAIvB,OACI,oCACI,4CACA,kBAAC,EAAD,CACIA,cAAgBA,IAEpB,6BAEA,4BACQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI2B,IAAM3B,EACNA,SAAWA,UCfvC8B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.eec6b28b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [ inputValue, setInputValue ] = useState('');\r\n\r\n    const handleInputChange = ( e ) =>{\r\n        setInputValue( e.target.value );\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ){\r\n            setCategories( cat => [ inputValue,...cat ]);\r\n            setInputValue('');\r\n        };\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n           <input \r\n                type='text'\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};","export const getGifs = async ( category ) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=12&api_key=39WTUL7F083q4kKgjqBkBYXpqHDhgtYv`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img?.images.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifgridItem = ( { id, title, url } ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React /*, { useState, useEffect }*/ from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifgridItem } from './GifgridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n\r\n            { loading && <p>Loading...</p> }\r\n            \r\n            <div className=\"card-grid\">\r\n                { images.map( ( img ) => (\r\n                    <GifgridItem \r\n                        key={ img.id }\r\n                    { ...img }\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [ state, setState ] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => { \r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [ category ]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [ categories, setCategories ] = useState([ 'Dragon Ball Z Super' ]);\r\n\r\n    return (  \r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory \r\n                setCategories={ setCategories }\r\n            />\r\n            <hr />\r\n\r\n            <ol>\r\n                {   categories.map( category =>(\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './components/GifExpertApp';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <GifExpertApp />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}